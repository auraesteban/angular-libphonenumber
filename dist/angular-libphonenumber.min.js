/**
 * angular-libphonenumber
 * Nathan Hammond's libphonenumber ported to an angular filter
 * @version v1.1.0
 * @link https://github.com/cwill747/angular-libphonenumber
 * @license Apache-2.0
 */
!function(e){e.module("cwill747.phonenumber",[]).directive("phoneNumber",["$log","$window",function(e,n){return{restrict:"A",require:"?ngModel",scope:{countryCode:"=",nonFormatted:"=?",extSymbol:"@"},controller:function(){this.countryCode=this.countryCode||"us"},link:function(t,r,o,u){function i(e){if(!e)return e;var n="([^0-9|+|"+g+"])",t=new RegExp(n,"g");return e.replace(t,"")}function l(e,n){var t=e.split(n);return{phoneNumber:t[0]?t[0]:"",extension:t[1]}}function c(n,t,r){var o=n;try{var u=l(n,r),i="string"==typeof u.extension?" "+r+u.extension:"";o=phoneUtils.formatAsTyped(u.phoneNumber,t),o+=i}catch(n){e.debug(n)}return o}function a(e){var n=i(e);t.nonFormatted=n;var r="";return r=n&&n.length>1?c(n,t.countryCode,g):n,r.trim()}function s(e){return u.$isEmpty(e)?e:c(i(e),t.countryCode,g)}function h(e){if(u.$isEmpty(e))return t.nonFormatted="",e;var n=a(e);if(n===e)return e;var r=p.selectionStart,o=p.selectionEnd+n.length-e.length;return e.length<n.length&&(r+=n.length-e.length),e.length>n.length+1&&(r-=n.length-e.length),u.$setViewValue(n),u.$render(),p.setSelectionRange(r,o),i(n)}function d(r){var o=!1;try{o=n.phoneUtils.isValidNumberForRegion(r,t.countryCode)}catch(n){e.debug(n)}var i=u.$isEmpty(r)||o;return u.$setValidity("phoneNumber",i),r}var p=r[0],g=t.extSymbol||"x";t.$watch("countryCode",function(){u.$modelValue=u.$viewValue+" "}),u.$formatters.push(s),u.$formatters.push(d),u.$parsers.push(h),u.$parsers.push(d)}}}])}(angular);
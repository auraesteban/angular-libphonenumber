/**
 * angular-libphonenumber
 * Nathan Hammond's libphonenumber ported to an angular filter
 * @version v1.1.0
 * @link https://github.com/cwill747/angular-libphonenumber
 * @license Apache-2.0
 */
!function(e){e.module("cwill747.phonenumber",[]).directive("phoneNumber",["$log","$window",function(e,n){function t(e){return e?e.replace(/([^0-9|+|x])/g,""):e}function r(e,n){var t=e.split(n);t[0];return{phoneNumber:t[0]?t[0]:"",extension:t[1]}}function o(n,t,o){var u=n;try{var i=r(n,o),l="string"==typeof i.extension?" "+o+i.extension:"";u=phoneUtils.formatAsTyped(i.phoneNumber,t),u+=l}catch(n){e.debug(n)}return u}return{restrict:"A",require:"?ngModel",scope:{countryCode:"=",nonFormatted:"=?",extSymbol:"="},controllerAs:"",controller:function(){this.countryCode=this.countryCode||"us"},link:function(r,u,i,l){function c(e){var n=t(e);r.nonFormatted=n;var u="";return u=n&&n.length>1?o(n,r.countryCode,p):n,u.trim()}function s(e){return l.$isEmpty(e)?e:o(t(e),r.countryCode,p)}function a(e){if(l.$isEmpty(e))return r.nonFormatted="",e;var n=c(e);if(n===e)return e;var o=d.selectionStart,u=d.selectionEnd+n.length-e.length;return e.length<n.length&&(o+=n.length-e.length),e.length>n.length+1&&(o-=n.length-e.length),l.$setViewValue(n),l.$render(),d.setSelectionRange(o,u),t(n)}function h(t){var o=!1;try{o=n.phoneUtils.isValidNumberForRegion(t,r.countryCode)}catch(n){e.debug(n)}var u=l.$isEmpty(t)||o;return l.$setValidity("phoneNumber",u),t}var d=u[0],p=r.extSymbol||"x";r.$watch("countryCode",function(){l.$modelValue=l.$viewValue+" "}),l.$formatters.push(s),l.$formatters.push(h),l.$parsers.push(a),l.$parsers.push(h)}}}])}(angular);